<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- 配置不过滤的资源（静态资源及登录相关） -->
    <security:http security="none" pattern="/css/**" />
    <security:http security="none" pattern="/img/**" />
    <security:http security="none" pattern="/plugins/**" />
    <security:http security="none" pattern="/pages/failer.jsp"/>
    <security:http security="none" pattern="/pages/login.jsp" />

    <!--下面三行是关于方法级权限控制的-->
    <!--使用jsr250注解对方法进行权限控制-->
    <!--<security:global-method-security jsr250-annotations="enabled"/>-->


    <!--使用spring自带的注解@Secured,使用不需要导包,但是注解属性必须加上“ROLE_”-->
    <security:global-method-security secured-annotations="enabled"/>


    <!--
    属性有两种写法：
    1、#userId == authentication.principal.userId 判断id值是否为存在principal的id值
    2、hasAuthority(‘ADMIN’) 判断权限角色名为ADMIN
    -->
    <!--<security:global-method-security pre-post-annotations="disabled"/>-->

    <security:http auto-config="true" use-expressions="false" >
        <!-- intercept-url定义一个过滤规则 pattern表示对哪些url进行权限控制，access属性表示在请求对应
        的URL时需要什么权限，authentication-success-forward-url="/index.jsp"
        默认配置时它应该是一个以逗号分隔的角色列表，请求的用户只需拥有其中的一个角色就能成功访问对应
        的URL -->

        <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN" />
        <!-- auto-config配置后，不需要在配置下面信息 <security:form-login /> 定义登录表单信息
        <security:http-basic/> <security:logout /> -->
        <security:form-login login-page="/pages/login.jsp"
                             login-processing-url="/login.do"
                             username-parameter="username"
                             password-parameter="password"
                             authentication-failure-url="/pages/failer.jsp"
                             default-target-url="/pages/main.jsp"/>
        <security:logout logout-url="/logout.do" invalidate-session="true" logout-success-url="/pages/login.jsp"/>
        <!-- 关闭CSRF,默认是开启的 -->
        <security:csrf disabled="true" />
    </security:http>
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!--<security:authentication-manager>-->
        <!--<security:authentication-provider>-->
            <!--<security:user-service>-->
                <!--<security:user name="user" password="{noop}user"-->
                               <!--authorities="ROLE_USER" />-->
                <!--<security:user name="admin" password="{noop}admin"-->
                               <!--authorities="ROLE_ADMIN" />-->
            <!--</security:user-service>-->
        <!--</security:authentication-provider>-->
    <!--</security:authentication-manager>-->
</beans>
